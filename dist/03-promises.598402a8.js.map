{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,SAAU,GAENC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAEtB,SAASC,EAAaC,GAEpB,GADAA,EAAMC,kBACDR,EAAKS,MAAO,CACE,IAAIC,SAASH,EAAMI,eAC3BC,SAAQ,CAACC,EAAKC,KACrBd,EAAKc,GAAQC,OAAOF,EAAI,IAE1BX,EAAKc,O,CAEP,GAAIhB,EAAKC,UAAYD,EAAKiB,OAGxB,OAFAjB,EAAKS,WAAQS,OACblB,EAAKC,SAAW,GAGlB,IAAIkB,EAAInB,EAAKC,SACTmB,EAAIpB,EAAKS,MAOKY,EANPF,EAMiBG,EANdF,EAOHG,YAAW,KAWxB,IAAuBtB,EAAUQ,GAAVR,EAVLoB,EAUeZ,EAVLa,EAWnB,IAAIE,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,IAEpCH,EAAQ,C,SAAExB,E,MAAUQ,IAEtBiB,EAAO,C,SAAEzB,E,MAAUQ,GAAQ,KAfxBoB,MAAK,EAAC5B,SAAEA,EAAQQ,MAAEA,MACjBX,EAAAgC,OAAOC,KAAK,uBAAqB9B,QAAiBQ,MAAU,IAE7DuB,OAAM,EAAC/B,SAAEA,EAAQQ,MAAEA,MAClBX,EAAAgC,OAAOG,QAAQ,sBAAoBhC,QAAeQ,MAAU,GAC5D,GACHa,GAdHtB,EAAKC,UAAY,EACjBD,EAAKS,OAAST,EAAKkC,KACnB5B,EAAaC,GAGf,IAAoBc,EAAUC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst refs = {\n  position: 0,\n};\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  if (!refs.delay) {\n    const formData = new FormData(event.currentTarget);\n    formData.forEach((val, name) => {\n      refs[name] = Number(val);\n    });\n    form.reset();\n  }\n  if (refs.position >= refs.amount) {\n    refs.delay = undefined;\n    refs.position = 0;\n    return;\n  }\n  let p = refs.position;\n  let d = refs.delay;\n  setPromise(p, d);\n  refs.position += 1;\n  refs.delay += refs.step;\n  onFormSubmit(event);\n}\n\nfunction setPromise(position, delay) {\n  const id = setTimeout(() => {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    }\n    reject({ position, delay });\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","position","$47d4ff9957288465$var$form","document","querySelector","addEventListener","$47d4ff9957288465$var$onFormSubmit","event","preventDefault","delay","FormData","currentTarget","forEach","val","name","Number","reset","amount","undefined","p","d","position1","delay1","setTimeout","Promise","resolve","reject","Math","random","then","Notify","info","catch","failure","step"],"version":3,"file":"03-promises.598402a8.js.map"}